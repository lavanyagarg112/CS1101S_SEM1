function bubblesort_list(L) {
    /*
    function helper(lst, count){
        
        if(is_null(lst)){
            return null;
        }
        
        else if(is_null(tail(lst)) || count === 0){
            return L;
        }
        
        else{
            const rest = tail(lst);
            if (head(lst) > head(rest)){
                const temp = head(lst);
                set_head(lst, head(rest));
                set_head(rest, temp);
            }
            return helper(tail(lst), count - 1);
        }
    }
    
    const len = length(L);
    let sorted = L;
    for(let i = 0; i < len - 1; i = i + 1){
        sorted = helper(sorted, len - i);
        display(sorted);
    }
    */
    
    const len = length(L);
    
    for(let i = len - 1; i >= 1; i = i - 1){
        let sorted = L;
        for(let j = 0; j < i; j = j + 1){
            
            const rest = tail(sorted);
            if (head(sorted) > head(rest)){
                const temp = head(sorted);
                set_head(sorted, head(rest));
                set_head(rest, temp);
                    
            }
                
            sorted = rest;
                
            
        }
    }
    
    
}

const LL = list(3, 5, 2, 4, 1);
bubblesort_list(LL);
LL; // should show [1, [2, [3, [4, [5, null]]]]]


// logic

// the head starting from the end
// has to be the largest

// eg: [3,5,2,4,1]

// first we do
// [3,5,2,4,1]
// [3,2,5,4,1]
// [3,2,4,5,1]
// [3,2,4,1,5]

// now 5 is at the end

// next we do for second last element
// [2,3,4,1,5]
// [2,3,4,1,5]
// [2,3,1,4,5]

// and then so on...