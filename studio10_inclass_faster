function rotate_matrix(M) {
    const n = array_length(M);  // M is assumed n x n.
    const half = n/2;
    const half_floor = math_floor(half);
    const half_ceil = math_ceil(half);
    
    // instead of half_ceil half_floor we can also use
    // const half_len = math_floor(n/2);

    function swap(r1, c1, r2, c2) {
        const temp = M[r1][c1];
        M[r1][c1] = M[r2][c2];
        M[r2][c2] = temp;
    }

    for(let i = 0; i < half_ceil; i = i + 1){
        for(let j = 0; j < half_floor; j = j + 1){
            // chain
            swap(i, j, n-1-j, i);
            swap(n-1-j, i, n-1-i, n-1-j);
            swap(n-1-i, n-1-j, j, n-1-i);
        }
    }
}

const M =
[[ 1,  2,  3,  4],
 [ 5,  6,  7,  8],
 [ 9, 10, 11, 12],
 [13, 14, 15, 16]];
 
rotate_matrix(M);
M;
// M should have become
// [[13,  9, 5, 1], 
//  [14, 10, 6, 2], 
//  [15, 11, 7, 3], 
//  [16, 12, 8, 4]]
