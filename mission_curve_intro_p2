import {make_point, 
        x_of, y_of, 
        draw_points, 
        draw_connected, 
        draw_points_full_view, 
        draw_connected_full_view, 
        draw_points_full_view_proportional, 
        draw_connected_full_view_proportional, 
        unit_circle, 
        unit_line, 
        unit_line_at} from 'curve';
        

/*
function s_generator(pt) {
    return t => make_point(1 * math_cos((2 * math_PI * 0.75* t)), 
                        1 * math_sin((2 * math_PI * 0.75 * t)));
                        
    return t => make_point(-1 * math_cos((2 * math_PI * 0.75* t)), 
                        -1 * math_sin((2 * math_PI * 0.75 * t)));
}
*/

function s_generator(pt) {
    return t => t < 0.5
        ? make_point(math_cos((2 * math_PI * 1.5*(t))) + x_of(pt), 
                        math_sin((2 * math_PI * 1.5*(t))) + y_of(pt)+1)
        : make_point(-1* (math_cos((2 * math_PI * (-1.5 * (t - 0.32)))) + (-1 * x_of(pt))), 
                      -1 * (math_sin((2 * math_PI* (-1.5 * (t - 0.32)))) + (-1*y_of(pt))+1));

}
// Test
draw_connected_full_view_proportional(200)(s_generator(make_point(0.5, 0.25)));