import {square, 
        blank, 
        ribbon, 
        circle, 
        show, 
        beside, 
        stack, 
        beside_frac, 
        stack_frac, 
        stackn} 
        from 'rune';

function moony_1(rune){
    
    return beside(stack(circle, square),stack(blank,rune));
    
}

show(moony_1(ribbon));

function moony_2(n){
    return n === 1
           ? circle
           : moony_1(moony_2(n - 1));
}

show(moony_2(5));


function moony(n){
    return n === 1
           ? circle
           : beside_frac(1 / n,
                        stack_frac(1 / n,circle,square),
                        stack_frac(1 / n,blank,moony(n - 1)));
}

show(moony(5));

// recursive process
// order of growth - theta(n) -> linear space and time
// size -> number of deferred operations
// assumption -> resize